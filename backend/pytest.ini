[tool:pytest]
# Test discovery patterns
testpaths = app/tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version requirement
minversion = 6.0

# Add project root to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --asyncio-mode=auto
    --disable-warnings

# Test markers for categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    api: API endpoint tests
    slow: Tests that take longer to run
    github: Tests requiring GitHub API access
    ai: Tests involving AI model operations
    database: Tests requiring database access
    webhook: Tests for webhook processing
    security: Security-related tests
    performance: Performance and load tests

# Async test configuration
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300

# Ignore certain warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Environment variables for testing
env =
    ENVIRONMENT = testing
    DATABASE_URL = sqlite:///:memory:
    GITHUB_TOKEN = test_token_123
    LOG_LEVEL = WARNING
    ENABLE_WEBHOOKS = false

# Test collection configuration
collect_ignore = [
    "setup.py",
    "migrations/",
    "alembic/",
    "cache/",
    "logs/",
]

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */alembic/*
    */venv/*
    */env/*
    */__pycache__/*
    */cache/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

# HTML coverage report configuration  
[coverage:html]
directory = htmlcov
title = AI-CodeReview Test Coverage Report

# XML coverage report for CI/CD
[coverage:xml]
output = coverage.xml